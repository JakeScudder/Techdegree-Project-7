{"version":3,"sources":["components/SearchForm.js","components/Nav.js","components/Photos.js","components/NotFound.js","components/PhotoContainer.js","components/PageNotFound.js","components/Header.js","App.js","config.js","serviceWorker.js","index.js"],"names":["SearchFormWithRouter","withRouter","props","useState","search","setSearch","onSubmit","e","preventDefault","searchUrl","history","push","handleSearch","Cookies","set","JSON","stringify","className","type","name","placeholder","value","onChange","target","fill","height","viewBox","width","xmlns","d","Nav","setLink","link","fetchNav","exact","to","onClick","Photos","photo","srcSet","farm","server","id","secret","src","alt","title","NotFound","data-flickr-embed","href","async","charSet","PhotoContainer","state","query","this","match","params","input","window","onpopstate","setTimeout","data","length","loading","map","key","Component","PageNotFound","location","pathname","Header","App","handleFetch","setState","axios","get","then","res","photos","catch","error","console","log","searchQuery","getJSON","path","render","component","Boolean","hostname","ReactDOM","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"gUAoDeA,EADcC,aA/CV,SAACC,GAAU,MAEAC,mBAAS,IAFT,mBAErBC,EAFqB,KAEbC,EAFa,KAkB5B,OACE,0BAAMC,SAda,SAACC,GACpBA,EAAEC,iBACF,IAAIC,EAAS,kBAAcL,GAC3BF,EAAMQ,QAAQC,KAAKF,GACnBP,EAAMU,aAAaR,GACnBS,IAAQC,IAAI,cAAeC,KAAKC,UAAUZ,IAC1CC,EAAU,KAQoBY,UAAU,eACtC,yBAAKA,UAAU,aACb,2BACEC,KAAK,SACLC,KAAK,SACLC,YAAY,SACZC,MAAOjB,EACPkB,SAZa,SAACf,GACpBF,EAAUE,EAAEgB,OAAOF,WAcjB,yBAAKJ,UAAU,aACb,4BAAQC,KAAK,SAASD,UAAU,iBAC9B,yBACEO,KAAK,OACLC,OAAO,KACPC,QAAQ,YACRC,MAAM,KACNC,MAAM,8BAEN,0BAAMC,EAAE,+OACR,0BAAMA,EAAE,gBAAgBL,KAAK,gBCpB1BM,EAnBH,SAAC5B,GAEX,IAAM6B,EAAU,SAAAxB,GACd,IAAIyB,EAAOzB,EAAEgB,OAAOJ,KACpBjB,EAAM+B,SAASD,IAGjB,OACA,yBAAKf,UAAU,YACb,4BACG,4BAAI,kBAAC,IAAD,CAASiB,OAAK,EAACC,GAAG,IAAIhB,KAAK,aAAaiB,QAASL,GAAjD,SACL,4BAAI,kBAAC,IAAD,CAASI,GAAG,SAAShB,KAAK,QAAQiB,QAASL,GAA3C,UACJ,4BAAI,kBAAC,IAAD,CAASI,GAAG,QAAQhB,KAAK,OAAOiB,QAASL,GAAzC,SAAJ,KACA,gCAAK,kBAAC,IAAD,CAASI,GAAG,eAAehB,KAAK,cAAciB,QAASL,GAAvD,gBAAL,QCFSM,EAbA,SAAC,GAAa,IAAZC,EAAW,EAAXA,MAGf,OACE,4BAEE,yBAAKC,OAAM,sBAAiBD,EAAME,KAAvB,6BAAgDF,EAAMG,OAAtD,YAAgEH,EAAMI,GAAtE,YAA4EJ,EAAMK,OAAlF,UACXC,IAAG,sBAAiBN,EAAME,KAAvB,6BAAgDF,EAAMG,OAAtD,YAAgEH,EAAMI,GAAtE,YAA4EJ,EAAMK,OAAlF,UAAkGE,IAAKP,EAAMQ,UCOvGC,EAbE,WAEf,OACA,wBAAI9B,UAAU,aACZ,gDACA,+HAEA,uBAAG+B,oBAAkB,OAAOC,KAAK,6ZAA6ZH,MAAM,cAAa,yBAAKF,IAAI,iEAAiE3B,UAAU,QAAQU,MAAM,OAAOF,OAAO,MAAMoB,IAAI,+BAA+B,4BAAQK,OAAK,EAACN,IAAI,4CAA4CO,QAAQ,aCgDrqBC,E,kDApDb,WAAYlD,GAAQ,IAAD,8BACjB,cAAMA,IACDmD,MAAQ,CACXC,MAAO,IAHQ,E,gEAQjB,IAAIA,EAAQC,KAAKrD,MAAMsD,MAAMC,OAAOC,MAChCJ,GACFC,KAAKrD,MAAMU,aAAa0C,K,2CAKN,IAAD,OACnBK,OAAOC,WAAa,SAACrD,GAEnBsD,YAAW,WACT,IAAIP,EAAQ,EAAKpD,MAAMsD,MAAMC,OAAOC,MAChCJ,GACF,EAAKpD,MAAMU,aAAa0C,KAEzB,Q,+BAML,OAA+B,IAA3BC,KAAKrD,MAAM4D,KAAKC,SAAuC,IAAvBR,KAAKrD,MAAM8D,QAE3C,yBAAK/C,UAAU,mBACb,uCACA,kBAAC,EAAD,OAMF,yBAAKA,UAAU,mBACb,uCACA,4BACGsC,KAAKrD,MAAM4D,KAAKG,KAAI,SAAC3B,GACpB,OAAO,kBAAC,EAAD,CAAQ4B,IAAK5B,EAAMI,GAAIJ,MAAOA,a,GA5CtB6B,aCcdC,EAfM,SAAC,GAAkB,IAAhBC,EAAe,EAAfA,SAEtB,OACA,yBAAKpD,UAAU,mBACb,wBAAIA,UAAU,aACZ,+DACA,oEAAyC,8BAAOoD,EAASC,UAAzD,mFAEA,uBAAGtB,oBAAkB,OAAOC,KAAK,mFAAmFH,MAAM,cAAa,yBAAKF,IAAI,kEAAkE3B,UAAU,QAAQU,MAAM,OAAOF,OAAO,MAAMoB,IAAI,eAAe,4BAAQK,OAAK,EAACN,IAAI,4CAA4CO,QAAQ,cCJ9UoB,EANA,WACb,OACE,wBAAItD,UAAU,UAAd,uBCkHWuD,E,kDAtGb,WAAYtE,GAAQ,IAAD,8BACjB,cAAMA,IAgBRuE,YAAc,SAACnB,GACb,EAAKoB,SAAS,CACZV,SAAS,IAEXW,IACGC,IADH,oFCrCW,mCDqCX,iBAEgGtB,EAFhG,2DAIGuB,MAAK,SAACC,GACL,EAAKJ,SAAS,CACZK,OAAQD,EAAIhB,KAAKiB,OAAOzC,MACxB0B,SAAS,OAGZgB,OAAM,SAACC,GACNC,QAAQC,IAAI,kCAAmCF,OA9BnD,EAAK5B,MAAQ,CACX+B,YAAavE,IAAQwE,QAAQ,gBAAkB,aAC/CN,OAAQ,GACRf,SAAS,GALM,E,gEAWjB,IAAIV,EAAQC,KAAKF,MAAM+B,YACvBF,QAAQC,IAAI7B,GACZC,KAAKkB,YAAYnB,K,+BAwBT,IAAD,OACP,OACE,kBAAC,IAAD,KACE,kBAAC,EAAD,MACA,yBAAKrC,UAAU,aACb,yBAAKA,UAAU,oBACb,kBAAC,EAAD,CAAYL,aAAc2C,KAAKkB,eAEjC,kBAAC,EAAD,CAAKxC,SAAUsB,KAAKkB,cAEnBlB,KAAKF,MAAMW,QAAU,uBAAG/C,UAAU,WAAb,cAAwC,KAC9D,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEiB,OAAK,EACLoD,KAAK,IACLC,OAAQ,SAACrF,GAAD,OACN,kBAAC,EAAD,iBACMA,EADN,CAEE4D,KAAM,EAAKT,MAAM0B,OACjBf,QAAS,EAAKX,MAAMW,cAI1B,kBAAC,IAAD,CACE9B,OAAK,EACLoD,KAAK,eACLC,OAAQ,SAACrF,GAAD,OACN,kBAAC,EAAD,iBAAoBA,EAApB,CAA2B4D,KAAM,EAAKT,MAAM0B,aAGhD,kBAAC,IAAD,CACE7C,OAAK,EACLoD,KAAK,QACLC,OAAQ,SAACrF,GAAD,OACN,kBAAC,EAAD,iBAAoBA,EAApB,CAA2B4D,KAAM,EAAKT,MAAM0B,aAGhD,kBAAC,IAAD,CACE7C,OAAK,EACLoD,KAAK,SACLC,OAAQ,SAACrF,GAAD,OACN,kBAAC,EAAD,iBAAoBA,EAApB,CAA2B4D,KAAM,EAAKT,MAAM0B,aAIhD,kBAAC,IAAD,CACE7C,OAAK,EACLoD,KAAK,iBACLC,OAAQ,SAACrF,GAAD,OACN,kBAAC,EAAD,iBACMA,EADN,CAEE4D,KAAM,EAAKT,MAAM0B,OACjBnE,aAAc,EAAK6D,YACnBT,QAAS,EAAKX,MAAMW,cAI1B,kBAAC,IAAD,CAAOwB,UAAWpB,W,GAhGZD,aEFEsB,QACW,cAA7B9B,OAAOU,SAASqB,UAEe,UAA7B/B,OAAOU,SAASqB,UAEhB/B,OAAOU,SAASqB,SAASlC,MACvB,2DCZNmC,IAASJ,OAAO,kBAAC,EAAD,MAASK,SAASC,eAAe,SD2H3C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMnB,MAAK,SAAAoB,GACjCA,EAAaC,kB","file":"static/js/main.778eabda.chunk.js","sourcesContent":["import React, { useState } from \"react\";\nimport { withRouter } from \"react-router\";\nimport Cookies from \"js-cookie\";\n\nconst SearchForm = (props) => {\n  //Set State\n  const [search, setSearch] = useState(\"\");\n\n  //Handles the form submission, passes info to handleSearch props\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    let searchUrl = `/search/${search}`;\n    props.history.push(searchUrl);\n    props.handleSearch(search);\n    Cookies.set(\"searchQuery\", JSON.stringify(search));\n    setSearch(\"\");\n  };\n\n  const handleChange = (e) => {\n    setSearch(e.target.value);\n  };\n\n  return (\n    <form onSubmit={handleSubmit} className=\"search-form\">\n      <div className=\"searchDiv\">\n        <input\n          type=\"search\"\n          name=\"search\"\n          placeholder=\"Search\"\n          value={search}\n          onChange={handleChange}\n        />\n      </div>\n      <div className=\"searchDiv\">\n        <button type=\"submit\" className=\"search-button\">\n          <svg\n            fill=\"#fff\"\n            height=\"24\"\n            viewBox=\"0 0 23 23\"\n            width=\"24\"\n            xmlns=\"http://www.w3.org/2000/svg\"\n          >\n            <path d=\"M15.5 14h-.79l-.28-.27C15.41 12.59 16 11.11 16 9.5 16 5.91 13.09 3 9.5 3S3 5.91 3 9.5 5.91 16 9.5 16c1.61 0 3.09-.59 4.23-1.57l.27.28v.79l5 4.99L20.49 19l-4.99-5zm-6 0C7.01 14 5 11.99 5 9.5S7.01 5 9.5 5 14 7.01 14 9.5 11.99 14 9.5 14z\" />\n            <path d=\"M0 0h24v24H0z\" fill=\"none\" />\n          </svg>\n        </button>\n      </div>\n    </form>\n  );\n};\n\nconst SearchFormWithRouter = withRouter(SearchForm);\nexport default SearchFormWithRouter;\n","import React from 'react';\nimport { NavLink } from 'react-router-dom';\n//Stateless\n\nconst Nav = (props) => {\n  \n  const setLink = e => {\n    let link = e.target.name;\n    props.fetchNav(link)\n  }\n\n  return (\n  <nav className=\"main-nav\">\n    <ul>\n       <li><NavLink exact to='/' name='buttercups' onClick={setLink}>Home</NavLink></li>\n      <li><NavLink to='/birds' name='birds' onClick={setLink}>Birds</NavLink></li>\n      <li><NavLink to='/bees' name='bees' onClick={setLink} >Bees </NavLink> </li>\n      <li> <NavLink to='/butterflies' name='butterflies' onClick={setLink} >Butterflies </NavLink> </li>\n    </ul>\n  </nav>\n  )\n};\n\nexport default Nav;","import React from 'react';\n\nconst Photos = ({photo}) => {\n  //Include href form modal in future\n  // const link = `${photo.url_o}`\n  return (\n    <li>\n      {/* <a href={link} > */}\n      <img srcSet={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_z.jpg`}\n      src={`https://farm${photo.farm}.staticflickr.com/${photo.server}/${photo.id}_${photo.secret}_m.jpg`} alt={photo.title} />\n      {/* </a> */}\n    </li>\n  )\n}\n\nexport default Photos;","import React from 'react';\n//Stateless\n\nconst NotFound = () => {\n\n  return (\n  <li className=\"not-found\">\n    <h3>No Results Found</h3>\n    <p>You search did not return any results, so here is a lovely picture of Big Sur. Please try again.</p>\n    {/* Image for empty space styling on webpage */}\n    <a data-flickr-embed=\"true\" href=\"https://www.flickr.com/photos/9756642@N02/7378502272/in/photolist-cf1KEq-cf1mUm-5VAh7o-gptmxB-3Am3VD-8WFZVr-N6tu7g-awPvNp-g67jjj-j1Z155-csJ99Q-A5z8-o4Rbfd-8WK3FA-Ypx3Hj-2aGYFTp-28kMt8-28PvtM-28wkd8J-dWNCnP-bvWZr-8rAaEe-28eK5oa-dSh9sr-rdu4ce-5TLM5G-8rAaBF-rLr5v-c6u3Fq-cf1fDo-Cn6Hp-9bhDYK-2eqTcCF-8rDfC9-Eh25T-cf1bKC-rLqAb-7tuur9-rDPh3-8nLEHQ-dWNAma-cf1Mhw-6y4s14-rLqrE-6LGU9T-nzsvHE-4vkJb2-ofLave-7FVUNv-TzVL8f\" title=\"Big Sur-12\"><img src=\"https://live.staticflickr.com/7244/7378502272_f05e1d0b1c_k.jpg\" className=\"ocean\" width=\"1500\" height=\"600\" alt=\"stuartlchambers/Big Sur-12\" /><script async src=\"//embedr.flickr.com/assets/client-code.js\" charSet=\"utf-8\"></script>\n    </a>\n  </li>\n  );\n}\n\nexport default NotFound;","import React, { Component } from \"react\";\nimport Photos from \"./Photos\";\nimport NotFound from \"./NotFound\";\n//Stateful\n\nclass PhotoContainer extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      query: \"\",\n    };\n  }\n\n  componentDidMount() {\n    let query = this.props.match.params.input;\n    if (query) {\n      this.props.handleSearch(query);\n    }\n  }\n\n  // Handles Browser Navigation\n  componentDidUpdate() {\n    window.onpopstate = (e) => {\n      // Delay for match params to be current\n      setTimeout(() => {\n        let query = this.props.match.params.input;\n        if (query) {\n          this.props.handleSearch(query);\n        }\n      }, 500);\n    };\n  }\n\n  render() {\n    //If no results, render NotFound Component\n    if (this.props.data.length === 0 && this.props.loading === false) {\n      return (\n        <div className=\"photo-container\">\n          <h2>Results</h2>\n          <NotFound />\n        </div>\n      );\n    } else {\n      //Otherwise return Photo components\n      return (\n        <div className=\"photo-container\">\n          <h2>Results</h2>\n          <ul>\n            {this.props.data.map((photo) => {\n              return <Photos key={photo.id} photo={photo} />;\n            })}\n          </ul>\n        </div>\n      );\n    }\n  }\n}\n\nexport default PhotoContainer;\n\n//Debugging Simple Formatting\n\n// render() {\n//     return (\n//         this.props.data.map( photo=> {\n//             return <Photos key={photo.id} photo={photo}/>\n//         })\n//     );\n// }\n","import React from 'react';\n\n//Stateless\n\nconst PageNotFound = ({ location }) => {\n\n  return(\n  <div className=\"photo-container\">\n    <li className=\"not-found\">\n      <h3>Sorry, that page does not exist</h3>\n      <p>404 Error: The url does not exist for <code>{location.pathname}</code> , so here is a picture of Big Sur. Please enter your search in the search bar.</p>\n      {/* Image for empty space styling on webpage */}\n      <a data-flickr-embed=\"true\" href=\"https://www.flickr.com/photos/9756642@N02/7459375332/in/album-72157630147982346/\" title=\"Camping-24\"><img src=\"https://live.staticflickr.com/7250/7459375332_7f5059b109_5k.jpg\" className=\"ocean\" width=\"1500\" height=\"600\" alt=\"Camping-24\" /><script async src=\"//embedr.flickr.com/assets/client-code.js\" charSet=\"utf-8\"></script>\n      </a>\n    </li>\n  </div>\n  );\n}\n\nexport default PageNotFound;","import React from 'react';\n\nconst Header = () => {\n  return (\n    <h1 className=\"header\"> Flickr Photo App </h1>\n  )\n}\n\nexport default Header;","import React, { Component } from \"react\";\nimport axios from \"axios\";\nimport apiKey from \"./config\";\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\n\n//App components\nimport SearchForm from \"./components/SearchForm\";\nimport Nav from \"./components/Nav\";\nimport PhotoContainer from \"./components/PhotoContainer\";\nimport PageNotFound from \"./components/PageNotFound\";\nimport Header from \"./components/Header\";\n\nimport Cookies from \"js-cookie\";\n\nclass App extends Component {\n  //Set state for fetch requests and loading indicators.\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchQuery: Cookies.getJSON(\"searchQuery\") || \"buttercups\",\n      photos: [],\n      loading: true,\n    };\n  }\n\n  //After components\n  componentDidMount() {\n    let query = this.state.searchQuery;\n    console.log(query);\n    this.handleFetch(query);\n  }\n\n  //Handles all fetch requests for: home route, navigation, and search forms\n  handleFetch = (query) => {\n    this.setState({\n      loading: true,\n    });\n    axios\n      .get(\n        `https://www.flickr.com/services/rest/?method=flickr.photos.search&api_key=${apiKey}&tags=${query}&per_page=24&extras=url_o&format=json&nojsoncallback=1`\n      )\n      .then((res) => {\n        this.setState({\n          photos: res.data.photos.photo,\n          loading: false,\n        });\n      })\n      .catch((error) => {\n        console.log(\"Error fetching and parsing data\", error);\n      });\n  };\n\n  //Renders the app's main page\n  render() {\n    return (\n      <HashRouter>\n        <Header />\n        <div className=\"container\">\n          <div className=\"search-container\">\n            <SearchForm handleSearch={this.handleFetch} />\n          </div>\n          <Nav fetchNav={this.handleFetch} />\n          {/* Loading State indicator */}\n          {this.state.loading ? <p className=\"loading\">Loading...</p> : null}\n          <Switch>\n            <Route\n              exact\n              path=\"/\"\n              render={(props) => (\n                <PhotoContainer\n                  {...props}\n                  data={this.state.photos}\n                  loading={this.state.loading}\n                />\n              )}\n            />\n            <Route\n              exact\n              path=\"/butterflies\"\n              render={(props) => (\n                <PhotoContainer {...props} data={this.state.photos} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/bees\"\n              render={(props) => (\n                <PhotoContainer {...props} data={this.state.photos} />\n              )}\n            />\n            <Route\n              exact\n              path=\"/birds\"\n              render={(props) => (\n                <PhotoContainer {...props} data={this.state.photos} />\n              )}\n            />\n\n            <Route\n              exact\n              path=\"/search/:input\"\n              render={(props) => (\n                <PhotoContainer\n                  {...props}\n                  data={this.state.photos}\n                  handleSearch={this.handleFetch}\n                  loading={this.state.loading}\n                />\n              )}\n            />\n            <Route component={PageNotFound} />\n          </Switch>\n        </div>\n      </HashRouter>\n    );\n  }\n}\n\nexport default App;\n","const apiKey = '773b57ed8672943c79f51d95edf6611e';\nexport default apiKey;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}